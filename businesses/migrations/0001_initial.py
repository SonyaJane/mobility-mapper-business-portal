# Generated by Django 5.2.4 on 2025-09-06 18:38

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessibilityFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('group_code', models.CharField(blank=True, help_text="Group code for category grouping (e.g. 'retail', 'food_drink')", max_length=30, null=True)),
                ('group_description', models.CharField(blank=True, help_text="Description of the group (e.g. 'Retail', 'Food & Drink')", max_length=200, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='MembershipTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('free', 'Free'), ('standard', 'Standard'), ('premium', 'Premium')], default='free', max_length=20)),
                ('description', models.JSONField()),
                ('membership_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('verification_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326)),
                ('street_address1', models.CharField(blank=True, default='', max_length=80)),
                ('street_address2', models.CharField(blank=True, max_length=80, null=True)),
                ('town_or_city', models.CharField(blank=True, default='', max_length=40)),
                ('county', models.CharField(blank=True, max_length=80, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('logo', models.ImageField(blank=True, max_length=255, null=True, upload_to='mobility_mapper_business_portal/business_logos/')),
                ('website', models.URLField(blank=True, null=True)),
                ('opening_hours', models.TextField(blank=True, null=True)),
                ('public_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('public_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('services_offered', models.TextField(blank=True, null=True)),
                ('special_offers', models.TextField(blank=True, help_text='Special offers or discounts available for wheelers', null=True)),
                ('facebook_url', models.URLField(blank=True, help_text='Facebook page URL', null=True)),
                ('x_twitter_url', models.URLField(blank=True, help_text='X profile URL', null=True)),
                ('instagram_url', models.URLField(blank=True, help_text='Instagram profile URL', null=True)),
                ('wheeler_verification_requested', models.BooleanField(default=False)),
                ('verified_by_wheelers', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accessibility_features', models.ManyToManyField(blank=True, related_name='businesses', to='businesses.accessibilityfeature')),
                ('business_owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
                ('categories', models.ManyToManyField(blank=True, related_name='businesses', to='businesses.category')),
                ('membership_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='businesses', to='businesses.membershiptier')),
            ],
            options={
                'verbose_name_plural': 'Businesses',
            },
        ),
        migrations.CreateModel(
            name='WheelerVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_verified', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField()),
                ('selfie', models.ImageField(blank=True, help_text='A selfie of the Wheeler taken at the business.', max_length=255, null=True, upload_to='mobility_mapper_business_portal/wheeler_selfies/')),
                ('approved', models.BooleanField(default=False, help_text='Has this verification been approved by an admin?')),
                ('additional_features', models.ManyToManyField(blank=True, related_name='additional_in_verifications', to='businesses.accessibilityfeature')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='businesses.business')),
                ('confirmed_features', models.ManyToManyField(related_name='confirmed_in_verifications', to='businesses.accessibilityfeature')),
                ('mobility_device', models.ForeignKey(blank=True, help_text='Type of wheeled mobility device used during verification.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verifications', to='accounts.mobilitydevice')),
                ('wheeler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('business', 'wheeler')},
            },
        ),
        migrations.CreateModel(
            name='WheelerVerificationPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(max_length=255, upload_to='mobility_mapper_business_portal/verification_photos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verification_photos', to='businesses.accessibilityfeature')),
                ('verification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='businesses.wheelerverification')),
            ],
        ),
        migrations.CreateModel(
            name='WheelerVerificationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('reviewed', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_requests', to='businesses.business')),
                ('wheeler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_requests_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('business', 'wheeler')},
            },
        ),
    ]
